{"version":3,"sources":["components/Person.js","components/LPerson.js","components/ErrorBoundry.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Person","name","birth_year","gender","height","mass","hair_color","skin_color","eye_color","className","alt","src","LPerson","Character","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","REQUEST_CHARACTER_PENDING","REQUEST_CHARACTER_SUCCESS","REQUEST_CHARACTER_FAILED","App","onRequestCharacter","isPending","connect","requestCharacter","dispatch","type","fetch","then","response","json","data","payload","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateCharacter","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.102361f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Person = ({ name, birth_year, gender, height, mass, hair_color, skin_color, eye_color }) => {\r\n\treturn (\r\n\t\t<div className='bg-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='people' src={`https://robohash.org/something?200x200`} />\r\n\t\t\t<div>\t\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>Birth year: {birth_year}</p>\r\n\t\t\t\t<p>Gender: {gender}</p>\r\n\t\t\t\t<p>Height: {height} cm</p>\r\n\t\t\t\t<p>Mass: {mass} kg</p>\r\n\t\t\t\t<p>Hair Color: {hair_color}</p>\r\n\t\t\t\t<p>Skin color: {skin_color}</p>\r\n\t\t\t\t<p>Eye Color: {eye_color}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Person;","import Person from './Person';\r\n\r\nconst LPerson = ({ Character }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\t<Person \r\n\t\t\t\t\tkey={0}\r\n\t\t\t\t\tname={Character.name}\r\n\t\t\t\t\theight={Character.height}\r\n\t\t\t          mass={Character.mass}\r\n\t\t\t          hair_color={Character.hair_color}\r\n\t\t\t          skin_color={Character.skin_color}\r\n\t\t\t          eye_color={Character.eye_color}\r\n\t\t\t          birth_year={Character.birth_year}\r\n\t\t\t          gender={Character.gender}\r\n\t\t\t        />\r\n\t\t\t   }\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default LPerson;\r\n\r\n\r\n\t\t\t","import react, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError:true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oooops. that is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","export const REQUEST_CHARACTER_PENDING = 'REQUEST_CHARACTER_PENDING';\r\nexport const REQUEST_CHARACTER_SUCCESS = 'REQUEST_CHARACTER_SUCCESS';\r\nexport const REQUEST_CHARACTER_FAILED = 'REQUEST_CHARACTER_FAILED';","import './App.css';\nimport react, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LPerson from '../components/LPerson';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { requestCharacter } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    Character: state.requestCharacter.Character,\n    isPending: state.requestCharacter.isPending,\n    error: state.requestCharacter.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestCharacter: () => dispatch(requestCharacter())\n  }\n}\n\n\nclass App extends Component {\n  async componentDidMount(){\n      this.props.onRequestCharacter();\n  }\n\n  render(){\n    const { Character, isPending } = this.props;\n    return (\n      <div className=' tc'>\n        <h1 className='f1 tc'>Simple Fetch API star wars character</h1>\n        { isPending ? <h1>loading...</h1> :\n          <ErrorBoundry>\n            <LPerson  Character={Character}/>\n          </ErrorBoundry>  \n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n\tREQUEST_CHARACTER_PENDING,\r\n\tREQUEST_CHARACTER_SUCCESS,\r\n\tREQUEST_CHARACTER_FAILED\r\n} from './constants.js'\r\n\r\n\r\nexport const requestCharacter = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_CHARACTER_PENDING });\r\n\tfetch('http://swapi.dev/api/people/1/')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_CHARACTER_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_CHARACTER_FAILED, payload: error }))\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n\tREQUEST_CHARACTER_PENDING,\r\n\tREQUEST_CHARACTER_SUCCESS,\r\n\tREQUEST_CHARACTER_FAILED\r\n} from './constants.js'\r\n\r\nconst initialStateCharacter = {\r\n\tisPending: false,\r\n\tCharacter: [],\r\n\terror: '' \r\n}\r\n\r\nexport const requestCharacter = (state = initialStateCharacter, action = {}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_CHARACTER_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true })\r\n\t\tcase REQUEST_CHARACTER_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { Character: action.payload, isPending: false})\r\n\t\tcase REQUEST_CHARACTER_FAILED:\r\n\t\t\treturn Object.assign({}, state, {error: action.payload, isPending: false})\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { requestCharacter } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({requestCharacter});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n\t<Provider store = {store}>\n\t\t<App />\n\t</Provider>\n\t,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}